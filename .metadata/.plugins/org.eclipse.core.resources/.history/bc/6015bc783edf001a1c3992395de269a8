package com.desafio.lojavirtual.resource;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.desafio.lojavirtual.model.ItemVendido;
import com.desafio.lojavirtual.model.Pedido;
import com.desafio.lojavirtual.repository.ItemVendidoRepository;
import com.desafio.lojavirtual.repository.PedidoRepository;
import com.desafio.lojavirtual.request.PedidoRequest;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

@RestController
@RequestMapping(value="/pedido")
@Api(value="API Rest Loja Virtual - Pedidos")
@CrossOrigin(origins="*")
public class PedidoResource {

	@Autowired
	PedidoRepository pedidoRepository;
	ItemVendidoRepository itemVendidoRepository;
	
	@GetMapping("/listar")
	@ApiOperation(value="Metodo retorna uma lista com todos os Pedidos salvos no Banco de Dados")
	public List<Pedido> listarPedido(){
		return pedidoRepository.findAll();
	}
	
	@GetMapping("/buscar/{id}")
	public Pedido buscarPedido(@PathVariable(value="id") long id){
		return pedidoRepository.findById(id);
	}
	
	@PostMapping("/cadastrar")
	public void salvarPedido(@RequestBody PedidoRequest pedido ) {
		pedidoRepository.save(pedido.getPedido());
		for (ItemVendido itemVendido : pedido.getItensVendidos()) {
			itemVendidoRepository.save(itemVendido);			
		}
	}
	
	@DeleteMapping("/excluir/{id}")
	public void excluirPedido(@RequestBody PedidoRequest pedido) {
		for (ItemVendido itemVendido : pedido.getItensVendidos()) {
			long idItemVendido = itemVendido.getId();
			itemVendidoRepository.deleteById(idItemVendido);			
		}
		long idPedido = pedido.getPedido().getId();
		pedidoRepository.deleteById(idPedido);
	}
	
}
